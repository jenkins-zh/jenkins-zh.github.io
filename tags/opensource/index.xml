<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>opensource on Jenkins 中文社区</title>
    <link>https://jenkins-zh.cn/tags/opensource/</link>
    <description>Recent content in opensource on Jenkins 中文社区</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 10 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jenkins-zh.cn/tags/opensource/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>关于 Jenkins 术语更新</title>
      <link>https://jenkins-zh.cn/wechat/articles/2020/07/2020-07-10-on-jenkins-terminology-updates/</link>
      <pubDate>Fri, 10 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-zh.cn/wechat/articles/2020/07/2020-07-10-on-jenkins-terminology-updates/</guid>
      <description>2016 年，Jenkins 社区决定开始在该项目中删除令人反感的术语。在 Jenkins 2.0 中，“slave”一词已被弃用，并由“agent”一词代替。在清理被认为是最有问题的“slave”一词之后，还将预定其他术语进行审查。2017 年，该项目开始跟踪需要纠正的区域。重命名 SSH 构建代理插件以及逐步删除服务和存储库中的攻击性命名的工作已经完成。今年，一群核心贡献者继续致力于这项关键工作。
Advocacy &amp;amp; Outreach SIG 开会讨论并确定了继续工作的优先次序。governance board 也召开了会议，将会有更多关于删除冒犯性术语的信息。上周，我们通过更新以前的博客文章并删除了旧博客中的冒犯性术语，清理了 Jenkins 内置文档和本地化中的一些引用，在项目中删除了冒犯性术语又迈出了一步。此处提供会议纪要，还可以在这里记录会议记录，还有更多工作要做。核心团队正在努力解决诸如“Master”，“whitelist”和“blacklist”之类的术语以及 git 分支术语。
我们需要您的帮助，我们将继续开展这项急需的工作，并谨此提醒大家，Jenkins 项目受《行为准则》约束。
真诚的 Marky Jackson。</description>
    </item>
    
    <item>
      <title>流水线编撰 SIG 公告</title>
      <link>https://jenkins-zh.cn/wechat/articles/2020/03/2020-03-16-pipeline-authoring-sig-update/</link>
      <pubDate>Mon, 16 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-zh.cn/wechat/articles/2020/03/2020-03-16-pipeline-authoring-sig-update/</guid>
      <description>什么是流水线撰写特别兴趣小组 这个特别的兴趣小组旨在改善和策划 Jenkins Pipelines 的创作经验。这包括 Jenkinsfile、共享库的语法、代码共享、重用、流水线、共享库的测试、IDE 集成、其他开发工具、文档、最佳实践、示例。
流水线撰写特殊兴趣小组的重点领域是什么  语法-如何编写 Jenkinsfiles 和共享库。 代码共享和重用-共享库和未来的改进。 测试-Jenkinsfile 和共享库的单元和功能测试。 IDE 集成，编辑器和其他开发工具-IDE 插件，可视化编辑器等。 文档-参考文档，教程等。 最佳做法-在 Jenkins Pipeline 中定义，维护和宣传最佳做法。 示例-现实世界中的 Jenkinsfile 和共享库演示了如何利用流水线的各种功能，以及基本或入门版的 Jenkinsfile 用于常见模式，新用户可以将其用作起点。  我们已经做了哪些 新年伊始，成员们聚在一起讨论 2020 年的路线图。在最初的讨论中，我们认为最好检查一下先前会议的目标并确定最佳的前进道路。
双方共同决定要更好地制定路线图。我们需要更好地了解我们打算帮助谁。我们认为创建角色非常有益。角色是虚构的角色，我们根据研究结果创建了这些角色，以代表可能使用 Jenkins 流水线的不同用户类型。创建角色可以帮助我们走出自我。它可以帮助我们认识到不同的人有不同的需求和期望，也可以帮助我们确定要为其制定路线图的用户。角色使当前的任务变得不那么复杂，可以指导我们的构思过程，并且可以帮助我们实现为目标用户组创造良好用户体验的目标。许多工作可以在这里找到：https://docs.google.com/document/d/1CdyzJwt50Wk3uUNsLMl2d4w2MGYss-phqet0s-KjbEs/edit。这个想法是将角色映射到成熟度模型，然后再将成熟度模型映射到实际文档。该成熟度模型可以在这里找到：https://drive.google.com/file/d/1ByzWlPU0j1qM_gqspJppkNKkR5ZVLWlB/view。
我如何参与其中 我们一直定期开会以定义角色，以帮助我们更好地创建 SIG 路线图。我们每周开会两次，一次在星期四（EMEA）时区，另一次在星期五（美国）时区。会议记录可以在这里找到：https://docs.google.com/document/d/1EhWoBplGl4M8bHz0uuP-iOynPGuONjcz4enQm8sDyUE/edit#,如果您想参与的话，可以查看日历在这里：https://jenkins.io/event-calendar/。会议的先前记录位于：https://www.youtube.com/watch?v=pz_kPpb9C1w&amp;amp;list=PLN7ajX_VdyaOKKLBXek6iG8wTS24Ac7Y3。
下一步 我们有很多工作要做，期待您的帮助。如果您想加入我们，请查看会议链接。如果您想查看角色并提供反馈，请查看链接。完成角色配置工作后，我们将开始确定可用的文档，并在 Doc SIG 的帮助下确保我们有足够的文档。然后，我们最终将开始着手构建工具，以帮助社区更好地利用 Jenkins 中的流水线。
联系我们 如果您想与 Pipeline-Authoring SIG 取得联系，可以通过加入 Pipeline-Authoring SIG gitter channel 或通过 Pipeline-Authoring SIG mailing list 来进行联系。</description>
    </item>
    
    <item>
      <title>Jenkins World 贡献者峰会及专家答疑展位</title>
      <link>https://jenkins-zh.cn/wechat/articles/2019/09/2019-09-16-jenkins-world-contributor-summit-and-ask-the-experts-booth/</link>
      <pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-zh.cn/wechat/articles/2019/09/2019-09-16-jenkins-world-contributor-summit-and-ask-the-experts-booth/</guid>
      <description>Jenkins 15周岁啦！Jenkins World 将 DevOps 思想领袖、IT 主管、持续交付实践者以及 Jenkins 社区和生态系统齐聚这场全球活动，让与会者有机会学习、探索以及面对面交流，帮助塑造 Jenkins 的下一次发展以及针对 DevOps 的解决方案。
此外，Jenkins 贡献者峰会也于旧金山举行。Jenkins 贡献者峰会是现有贡献者以及未来贡献者围绕 Jenkins 项目，以最新思考和最大努力来共同探讨、学习和协作的地方。上午峰会安排是由核心贡献者进行一系列展示介绍。这些介绍突出了每项工作的内容，以及社区成员可以提供哪些帮助。下午分组讨论会上，与同好小组进行了深入讨论，并同子项目贡献者进行合作。
我非常荣幸能成为其中一员。 第一天 第一天以贡献者峰会开场。这让大家有机会聚在一起讨论对社区的贡献，把脑海中熟悉的名字和本人对上号。大多数人我只通过视频聊天和在 gitter 上见过，所以当时我特别激动。我们聚在一起了解 Jenkins 开源画卷的起点。
接下来是同好讨论/非正式会议。我主导这些讨论会，个人认为进展十分顺利。成员组织管理员 Martin d’Anjou 和 Jeff Pearce 为我们带来一场有关 Google 编程夏令营（Google Summer of Code，以下简称 GSoC）项目的演讲。
GSoC 学生 Natasha Stopa 介绍了她的项目——Plugin Installation Manager Library/CLI Tool。这是一个超酷的项目，在社区受到广泛欢迎。
讨论会结尾是博思艾伦咨询公司（Booz Allen Hamilton）的 Steven Terrana 的展示和精彩的 Jenkins 模板引擎。如果你还没有试过这个，请一定不要错过[https://github.com/boozallen/jenkins-templating-engine] (https://github.com/boozallen/jenkins-templating-engine)。
主展厅 从第二天起，我和其他几位 Jenkins 组织管理者将在 Jenkins 社区的专家答疑（Ask the Expert）展位。
这真的是一场非常有意思的体验，让我有机会了解社区正在做什么，帮助他们解决面对的问题。问题涉及的范围很广，从 Jenkins X 到我负责维护的种种插件，如 Jenkins Prometheus 和 Sysdig Secure Scanning 插件。也有很多关于 Kubernetes 的问题。有很多关于 Kubernetes 使用情况提高的市场营销方面的数据，但对 Kubernetes 上 Jenkins 的超高兴趣度真的让我大吃一惊。当然，也有机会拍点儿自拍。</description>
    </item>
    
    <item>
      <title>为 Continuous Delivery Foundation 的成立感到兴奋</title>
      <link>https://jenkins-zh.cn/wechat/articles/2019/03/2019-03-13-ready-for-CDF/</link>
      <pubDate>Wed, 13 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-zh.cn/wechat/articles/2019/03/2019-03-13-ready-for-CDF/</guid>
      <description>大概十一年前，我就开始为现在被称为 Jenkins 的项目做贡献，自己当时其实也并不知道在做什么。但是接下来发生的事情令人感觉难以置信，数以百计的贡献者加入，成千上万的新用户开始使用 Jenkins，每天都会运行数以百万条的流水线。这样的增长是充满挑战性的，用户的增长意味着问题的增长，问题的增长就意味着需要新的解决方式。 在大约两年半之前，我在2017年的 Jenkins World Contributor Summit 大会上面对一大群 Jenkins 的贡献者们，为我的所谓的 &amp;lsquo;Jenkins软件基金会&amp;rsquo; 做了宣传，那就是，不要羞于从 Python 社区汲取思想，在我的朋友 Chris Aniszczyk 和 Linux 基金会的帮助下，这个基金会变成了一个更加全面的 持续交付基金会（CDF），我的同事 Tracy Miranda 一直在领导这项工作，帮助推动 CDF 的成立。
Kohsuke 为 jenkinsci-dev@ mailing list 撰写了一篇很好的概述文章，其中列举了如果 Jenkins 项目一旦建立后就应该加入 Continuous Delivery Foundation 的原因。如果你对 Jenkins 项目感兴趣，但是还没有阅读过这边文章的话，那我认为你应该花些时间来阅读 Kohsuke 的这份邮件。但是在 这篇文章 中，我 想分享我愿意帮助建立持续交付基金会（CDF）的原因。
持续交付（CD）已经成为我职业生涯中不可或缺的一部分，甚至在 Jez Humble 将此概念清晰地表述之前，我就开始学习 CD 并且对它一直充满热情。我认为它对软件的开发实践至关重要，当有人说他们没有练习使用 CI 或 CD 时，我感觉这就像回到了原始社会。想象一下，如果有人说 &amp;ldquo;呃，我们在这里有一个采用 Source Control 的项目，但领导们觉得这个东西不太靠谱&amp;rdquo;，我想你肯定会惊掉下巴。&amp;ldquo;在这个时代竟然还有开发团队都不使用源代码管理？&amp;quot;。总体来说，我认为CD已经是现代软件开发的基础了。
持续交付也 不是 说只依赖于 Jenkins 这样的单一工具，它也是依赖于其他的用于协同工作的许多工具。虽然我可能觉得 Jenkins 是所有工具中占最中心位置的工具，但也不是说 Jenkins 是这些工具中唯一优秀的一款工具。但是不幸的是，像 Jenkins 这样的许多开源社区往往对他们的世界有着一定的狭隘观点。他们只专注于他们的事情，虽然这是有道理的，但这及可能导致错失交叉合作产生新价值的机会。</description>
    </item>
    
  </channel>
</rss>