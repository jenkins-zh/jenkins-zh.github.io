<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gsoc2020 on Jenkins 中文社区</title>
    <link>https://jenkins-zh.cn/tags/gsoc2020/</link>
    <description>Recent content in Gsoc2020 on Jenkins 中文社区</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 24 Mar 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jenkins-zh.cn/tags/gsoc2020/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2020 Google 编程之夏活动总结</title>
      <link>https://jenkins-zh.cn/wechat/articles/2021/03/2021-03-24-google-summer-of-code-2020-summary/</link>
      <pubDate>Wed, 24 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-zh.cn/wechat/articles/2021/03/2021-03-24-google-summer-of-code-2020-summary/</guid>
      <description>随着十月份导师峰会与课题回顾的结束，现在我们宣布 Google 编程之夏 2020 活动在 Jenkins 社区圆满结束。我们谨代表 Jenkins 团队，感谢所有今年参与到此次活动的参与者们: 学生、导师、申请者以及各位贡献者。Google 编程之夏活动的顺利举行离不开 Jenkins 社区各位成员的积极参与。
如果一直关注 Jenkins 博客，你已经看到课题团队创建了很多 GSoC 2020 文章。这里，我们着重聚焦一些此次活动的“高光时刻”。
项目 2020 年，我们有 7 名学生参与进了 Jenkins 导师组织中。有 6 个 Jenkins 项目 1 个 Jenkins X 项目。按照往年惯例，在 GSoC 我们一般将注意力集中于对 Jenkins 用户与社区成员比较重要的问题上。这些项目具有备受期待的新特性以及对后期 Jenkins 长期发展具有关键意义的架构变更。
以下为今年我们参与的项目:
 Sladyn Nunes - 自定义 Jenkins 发行版构建服务
 Sumit Sarin - 外部指纹存储
 Rishabh Budhouliya - Git 插件性能提升
 Kezhi Xiong - Jenkins GitHub Checks API 插件</description>
    </item>
    
    <item>
      <title>GSoC: GitHub Checks API 项目第三阶段总结</title>
      <link>https://jenkins-zh.cn/wechat/articles/2020/09/2020-09-25-github-checks-api-plugin-project-coding-phase-3/</link>
      <pubDate>Fri, 25 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-zh.cn/wechat/articles/2020/09/2020-09-25-github-checks-api-plugin-project-coding-phase-3/</guid>
      <description>这篇文章将介绍 GitHub Checks API 项目在谷歌编程之夏第三阶段的相关工作。
在这个夏天的尾声，GitHub Checks API 项目迎来了它在 GSoC 的最后一段旅程。在这篇文章当中，我将向你们展示我们在这最后一个阶段中的相关工作： - 流水线支持 - Rerun 请求支持 - Git SCM 支持 - 文档的完善
以上的特性已经合并在了最新发布的 Checks API 插件 与 GitHub Checks 插件 的 1.0.0 版本中。
流水线支持 对流水线的支持让用户无需依赖任何 Checks API 的实现就可以直接在他们编写的流水线当中轻松发布 checks。
上图中的 check 可以通过如下脚本实现：
publishChecks name: &#39;pipeline check&#39;, title: &#39;pipeline &#39;, summary: &#39;# A pipeline check example&#39;, text: &amp;quot;## This check is published through the pipeline script&amp;quot;, detailsURL: &#39;https://ci.jenkins.io&#39;  如果你想要发布 checks 到 GitHub，请安装 GitHub 的实现 并查阅 GitHub API 文档 了解各个参数的相关用途。其中，detailsURL 会拥有一个链接到此次 Jenkins 构建页面的默认值。</description>
    </item>
    
    <item>
      <title>GSoC: GitHub Checks API 项目第一阶段总结</title>
      <link>https://jenkins-zh.cn/wechat/articles/2020/08/2020-08-07-github-checks-api-plugin-project-coding-phase-1/</link>
      <pubDate>Fri, 07 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-zh.cn/wechat/articles/2020/08/2020-08-07-github-checks-api-plugin-project-coding-phase-1/</guid>
      <description>这篇博客将介绍 GSoC 项目 GitHub Checks API Plugin 在一阶段的相关进展。
简单来说，GitHub Checks API 就是一套可高度定制化接受 CI 报告的接口。 CI 工具可以通过该接口反馈信息给特定的 Pull Request，随后，用户便可以直接在 GitHub 的 UI 界面上直观的浏览 CI 报告。
更激动人心的是，它可以针对指定的代码行进行注释，这类似于开发者平时在代码审查时留下的评论。
同时，在 Jenkins 这边，Warnings Next Generation Plugin 能通过源代码视图实现类似的功能。
因此，通过使用 GitHub Checks API 将这些信息直接反馈给 GitHub 能使 Jenkins 对 GitHub 用户更加友好。
阶段一实现的相关特性 在过去的一个月里，我们团队的工作主要集中在 General Checks API 和 GitHub Checks API 的实现上。
General Checks API 尽管 General Checks API 是基于 GitHub Checks API 的语义实现的，我们仍然希望能提供这样的泛化接口为其他平台的相关概念做好准备，例如：GitLab 上的 Commit Status API。 在今后，我们欢迎所有人贡献针对这些平台的相关实现。</description>
    </item>
    
    <item>
      <title>社区推送博客-机器学习插件项目</title>
      <link>https://jenkins-zh.cn/wechat/articles/2020/07/2020-07-06-machine-learning-plugin-project-community-bonding-blog-post/</link>
      <pubDate>Mon, 06 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-zh.cn/wechat/articles/2020/07/2020-07-06-machine-learning-plugin-project-community-bonding-blog-post/</guid>
      <description>大家好！
这是 GSoC 2020 中的 Jenkins 项目之一。我们正在为此 GSoC 2020 使用此新的机器学习插件。这是我在社区关于 GSoC 2020 的故事。我很高兴与您分享我的旅程。
自我介绍和神奇的 4 位导师 我是 Moratuwa 大学的 Loghi Perinpanayagam。我被选为 Jenkins 的 GSoC 2020 机器学习插件的负责人。我很高兴向我的导师介绍这个项目。我分配了四位导师，他们非常热心地帮助我在今年夏天开发代码。
学生
 Loghi Perinpanayagam  导师
 Bruno P. Kinoshita Ioannis Moutsatsos Marky Jackson Shivay Lamba  去年我的准备情况如何？ 我在第二年就了解了 GSoC 开源项目。但是我至少在去年尝试了另一个组织的项目，该项目与《数据科学的数据可视化建议》有关。但是问题是我的贡献不如今年那么大，在申请过程中为时已晚。像往常一样，与其他项目相比，与机器学习相关的项目有很多竞争。我准备学习机器学习中的数据可视化以及推荐系统的现有模型。最后，我当时用 SeqToSeq 模型编写了一个提案，当时对神经网络知识不多。而且我没有通过专用的闲暇渠道进行太多交流。这可能是失败的原因之一。但是主要原因是我对 GSoC 2019 的了解不多。
我如何跨过 GSoC 2020？ 自从我意识到开源的必要性和对社区的帮助以来，我一直热衷于为开源项目做出贡献。实际上，我于 2019 年在印度班加罗尔完成了实习，我立即专注于参与 GSoC。这是我作为计算机科学理学学士学位课程的学生的最后一年（2020年），我希望今年能被选为学生。
我们部门举办了一次指导研讨会，我知道 Jenkins 已经打开了他们的项目构想。这是我的 GSoC 2020 旅程的一个非常令人印象深刻的开始。我在 jenkins.io 页面上浏览了所有草案并接受了项目。因为我已经对机器学习感兴趣，并且对 Java 很熟悉，所以我选择了最令人印象深刻的想法，因为它没有初始回购协议。这意味着我想利用我的知识对该项目进行很多思考和研究。但是我必须做出贡献，并且想了解 Jenkins 代码库的基础结构。因为这样可以使选择面板易于接洽该项目的学生。然后，我反复搜索为 Jenkins 做贡献。我发现从 git 插件和 git 客户端插件可以轻松解决的问题。我开始在 git 插件和 git 客户端插件上贡献一些测试问题。在清楚了解插件在 Jenkins 中的工作原理后，我开始使用项目构想页面中提供的提示来进行 POC 的工作。实际上，编写代码很有趣。</description>
    </item>
    
  </channel>
</rss>